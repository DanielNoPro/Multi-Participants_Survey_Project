openapi: 3.0.3
info:
  title: Survey Project API
  version: 1.0.0
  description: Survey Project API description
paths:
  /api/v1/question_types/:
    get:
      operationId: api_v1_question_types_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQuestionTypeList'
          description: ''
    post:
      operationId: api_v1_question_types_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionType'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionType'
          description: ''
  /api/v1/question_types/{id}/:
    get:
      operationId: api_v1_question_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question type.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionType'
          description: ''
    put:
      operationId: api_v1_question_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionType'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionType'
          description: ''
    patch:
      operationId: api_v1_question_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question type.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuestionType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuestionType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuestionType'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionType'
          description: ''
    delete:
      operationId: api_v1_question_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question type.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/questions/:
    get:
      operationId: api_v1_questions_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQuestionList'
          description: ''
    post:
      operationId: api_v1_questions_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Question'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Question'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
  /api/v1/questions/{id}/:
    get:
      operationId: api_v1_questions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    put:
      operationId: api_v1_questions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Question'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Question'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    patch:
      operationId: api_v1_questions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    delete:
      operationId: api_v1_questions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/questions/{question_id}/options/:
    get:
      operationId: api_v1_questions_options_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQuestionOptionList'
          description: ''
    post:
      operationId: api_v1_questions_options_create
      parameters:
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionOption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionOption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionOption'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionOption'
          description: ''
  /api/v1/questions/{question_id}/options/{id}/:
    get:
      operationId: api_v1_questions_options_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question option.
        required: true
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionOption'
          description: ''
    put:
      operationId: api_v1_questions_options_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question option.
        required: true
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionOption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionOption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionOption'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionOption'
          description: ''
    patch:
      operationId: api_v1_questions_options_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question option.
        required: true
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuestionOption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuestionOption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuestionOption'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionOption'
          description: ''
    delete:
      operationId: api_v1_questions_options_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question option.
        required: true
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/surveys/:
    get:
      operationId: api_v1_surveys_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSurveyList'
          description: ''
    post:
      operationId: api_v1_surveys_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Survey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
  /api/v1/surveys/{id}/:
    get:
      operationId: api_v1_surveys_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
    put:
      operationId: api_v1_surveys_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Survey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
    patch:
      operationId: api_v1_surveys_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSurvey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSurvey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSurvey'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
    delete:
      operationId: api_v1_surveys_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/surveys/{id}/duplicate/:
    post:
      operationId: api_v1_surveys_duplicate_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/surveys/{survey_id}/participants/:
    get:
      operationId: api_v1_surveys_participants_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPartitionSurveyList'
          description: ''
    post:
      operationId: api_v1_surveys_participants_create
      parameters:
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartitionSurvey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartitionSurvey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartitionSurvey'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionSurvey'
          description: ''
  /api/v1/surveys/{survey_id}/participants/{id}/:
    get:
      operationId: api_v1_surveys_participants_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this participant survey.
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionSurvey'
          description: ''
    put:
      operationId: api_v1_surveys_participants_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this participant survey.
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartitionSurvey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartitionSurvey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartitionSurvey'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionSurvey'
          description: ''
    patch:
      operationId: api_v1_surveys_participants_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this participant survey.
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPartitionSurvey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPartitionSurvey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPartitionSurvey'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionSurvey'
          description: ''
    delete:
      operationId: api_v1_surveys_participants_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this participant survey.
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/surveys/{survey_id}/questions/:
    get:
      operationId: api_v1_surveys_questions_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSurveyQuestionList'
          description: ''
    post:
      operationId: api_v1_surveys_questions_create
      parameters:
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurveyQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SurveyQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SurveyQuestion'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyQuestion'
          description: ''
  /api/v1/surveys/{survey_id}/questions/{id}/:
    get:
      operationId: api_v1_surveys_questions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey question.
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyQuestion'
          description: ''
    put:
      operationId: api_v1_surveys_questions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey question.
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurveyQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SurveyQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SurveyQuestion'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyQuestion'
          description: ''
    patch:
      operationId: api_v1_surveys_questions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey question.
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSurveyQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSurveyQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSurveyQuestion'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyQuestion'
          description: ''
    delete:
      operationId: api_v1_surveys_questions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey question.
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/surveys/{survey_id}/questions/{question_id}/answers/:
    get:
      operationId: api_v1_surveys_questions_answers_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnswerList'
          description: ''
    post:
      operationId: api_v1_surveys_questions_answers_create
      parameters:
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Answer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Answer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Answer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
  /api/v1/surveys/{survey_id}/questions/{question_id}/answers/{id}/:
    get:
      operationId: api_v1_surveys_questions_answers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    put:
      operationId: api_v1_surveys_questions_answers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Answer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Answer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Answer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    patch:
      operationId: api_v1_surveys_questions_answers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAnswer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAnswer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAnswer'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    delete:
      operationId: api_v1_surveys_questions_answers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/token:
    post:
      operationId: api_v1_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoreTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CoreTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CoreTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoreTokenObtainPair'
          description: ''
  /api/v1/token/refresh:
    post:
      operationId: api_v1_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/token/verify:
    post:
      operationId: api_v1_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
components:
  schemas:
    Answer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
          nullable: true
        answered_at:
          type: string
          format: date-time
          readOnly: true
        answer_updated_at:
          type: string
          format: date-time
          readOnly: true
        question:
          type: integer
        survey:
          type: integer
        option:
          type: integer
          nullable: true
        answered_by:
          type: integer
      required:
      - answer_updated_at
      - answered_at
      - answered_by
      - id
      - question
      - survey
    CoreTokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    PaginatedAnswerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
    PaginatedPartitionSurveyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PartitionSurvey'
    PaginatedQuestionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Question'
    PaginatedQuestionOptionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/QuestionOption'
    PaginatedQuestionTypeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/QuestionType'
    PaginatedSurveyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Survey'
    PaginatedSurveyQuestionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SurveyQuestion'
    PartitionSurvey:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          type: string
          maxLength: 55
        is_active:
          type: boolean
        invited_participant_at:
          type: string
          format: date-time
          readOnly: true
        participant_joined_at:
          type: string
          format: date-time
          readOnly: true
        participant:
          type: integer
        survey:
          type: integer
      required:
      - id
      - invited_participant_at
      - participant
      - participant_joined_at
      - status
      - survey
    PatchedAnswer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
          nullable: true
        answered_at:
          type: string
          format: date-time
          readOnly: true
        answer_updated_at:
          type: string
          format: date-time
          readOnly: true
        question:
          type: integer
        survey:
          type: integer
        option:
          type: integer
          nullable: true
        answered_by:
          type: integer
    PatchedPartitionSurvey:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          type: string
          maxLength: 55
        is_active:
          type: boolean
        invited_participant_at:
          type: string
          format: date-time
          readOnly: true
        participant_joined_at:
          type: string
          format: date-time
          readOnly: true
        participant:
          type: integer
        survey:
          type: integer
    PatchedQuestion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
        is_active:
          type: boolean
        question_created_at:
          type: string
          format: date-time
          readOnly: true
        question_updated_at:
          type: string
          format: date-time
          readOnly: true
        question_type:
          type: integer
        question_created_by:
          type: integer
    PatchedQuestionOption:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
        is_active:
          type: boolean
        option_created_at:
          type: string
          format: date-time
          readOnly: true
        option_updated_at:
          type: string
          format: date-time
          readOnly: true
        question:
          type: integer
    PatchedQuestionType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        is_active:
          type: boolean
    PatchedSurvey:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        is_active:
          type: boolean
        survey_created_at:
          type: string
          format: date-time
          readOnly: true
        survey_updated_at:
          type: string
          format: date-time
          readOnly: true
        questions:
          type: array
          items:
            type: integer
          readOnly: true
        participant:
          type: array
          items:
            type: integer
          readOnly: true
    PatchedSurveyQuestion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_active:
          type: boolean
        asked_at:
          type: string
          format: date-time
          readOnly: true
        adjusted_at:
          type: string
          format: date-time
          readOnly: true
        survey:
          type: integer
        question:
          type: integer
        asked_by:
          type: integer
    Question:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
        is_active:
          type: boolean
        question_created_at:
          type: string
          format: date-time
          readOnly: true
        question_updated_at:
          type: string
          format: date-time
          readOnly: true
        question_type:
          type: integer
        question_created_by:
          type: integer
      required:
      - content
      - id
      - question_created_at
      - question_created_by
      - question_type
      - question_updated_at
    QuestionOption:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
        is_active:
          type: boolean
        option_created_at:
          type: string
          format: date-time
          readOnly: true
        option_updated_at:
          type: string
          format: date-time
          readOnly: true
        question:
          type: integer
      required:
      - content
      - id
      - option_created_at
      - option_updated_at
      - question
    QuestionType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        is_active:
          type: boolean
      required:
      - id
      - name
    Survey:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        is_active:
          type: boolean
        survey_created_at:
          type: string
          format: date-time
          readOnly: true
        survey_updated_at:
          type: string
          format: date-time
          readOnly: true
        questions:
          type: array
          items:
            type: integer
          readOnly: true
        participant:
          type: array
          items:
            type: integer
          readOnly: true
      required:
      - end_date
      - id
      - participant
      - questions
      - start_date
      - survey_created_at
      - survey_updated_at
      - title
    SurveyQuestion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_active:
          type: boolean
        asked_at:
          type: string
          format: date-time
          readOnly: true
        adjusted_at:
          type: string
          format: date-time
          readOnly: true
        survey:
          type: integer
        question:
          type: integer
        asked_by:
          type: integer
      required:
      - adjusted_at
      - asked_at
      - asked_by
      - id
      - question
      - survey
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
