openapi: 3.0.3
info:
  title: Survey Project API
  version: 1.0.0
  description: Survey Project API description
paths:
  /api/v1/auth/email/:
    post:
      operationId: auth_email_create
      description: This returns a 6-digit callback token we can trade for a user's
        Auth Token.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailAuth'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailAuth'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailAuth'
        required: true
      security:
      - basicAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAuth'
          description: ''
  /api/v1/auth/mobile/:
    post:
      operationId: auth_mobile_create
      description: This returns a 6-digit callback token we can trade for a user's
        Auth Token.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MobileAuth'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MobileAuth'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MobileAuth'
        required: true
      security:
      - basicAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileAuth'
          description: ''
  /api/v1/auth/token/:
    post:
      operationId: auth_token_create
      description: |-
        This is a duplicate of rest_framework's own ObtainAuthToken method.
        Instead, this returns an Auth Token based on our callback token and source.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallbackTokenAuth'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallbackTokenAuth'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CallbackTokenAuth'
        required: true
      security:
      - basicAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallbackTokenAuth'
          description: ''
  /api/v1/auth/verify/:
    post:
      operationId: auth_verify_create
      description: |-
        This verifies an alias on correct callback token entry using the same logic as auth.
        Should be refactored at some point.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallbackTokenVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallbackTokenVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CallbackTokenVerification'
        required: true
      security:
      - basicAuth: []
      - jwtAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallbackTokenVerification'
          description: ''
  /api/v1/auth/verify/email/:
    post:
      operationId: auth_verify_email_create
      description: This returns a 6-digit callback token we can trade for a user's
        Auth Token.
      tags:
      - auth
      security:
      - basicAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/verify/mobile/:
    post:
      operationId: auth_verify_mobile_create
      description: This returns a 6-digit callback token we can trade for a user's
        Auth Token.
      tags:
      - auth
      security:
      - basicAuth: []
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/participants/{id}/activate/:
    patch:
      operationId: participants_activate_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - participants
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionSurvey'
          description: ''
  /api/v1/participants/{id}/deactivate/:
    patch:
      operationId: participants_deactivate_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - participants
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionSurvey'
          description: ''
  /api/v1/question_types/:
    get:
      operationId: question_types_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - question_types
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQuestionTypeList'
          description: ''
    post:
      operationId: question_types_create
      tags:
      - question_types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionType'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionType'
          description: ''
  /api/v1/question_types/{id}/:
    get:
      operationId: question_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question type.
        required: true
      tags:
      - question_types
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionType'
          description: ''
    put:
      operationId: question_types_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question type.
        required: true
      tags:
      - question_types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionType'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionType'
          description: ''
    patch:
      operationId: question_types_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question type.
        required: true
      tags:
      - question_types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuestionType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuestionType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuestionType'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionType'
          description: ''
    delete:
      operationId: question_types_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question type.
        required: true
      tags:
      - question_types
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/questions/:
    get:
      operationId: questions_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - questions
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQuestionList'
          description: ''
    post:
      operationId: questions_create
      tags:
      - questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Question'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Question'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
  /api/v1/questions/{id}/:
    get:
      operationId: questions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - questions
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    put:
      operationId: questions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Question'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Question'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    patch:
      operationId: questions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    delete:
      operationId: questions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - questions
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/questions/{question_id}/options/:
    get:
      operationId: questions_options_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      tags:
      - questions
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQuestionOptionList'
          description: ''
    post:
      operationId: questions_options_create
      parameters:
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      tags:
      - questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionOption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionOption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionOption'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionOption'
          description: ''
  /api/v1/questions/{question_id}/options/{id}/:
    get:
      operationId: questions_options_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question option.
        required: true
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      tags:
      - questions
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionOption'
          description: ''
    put:
      operationId: questions_options_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question option.
        required: true
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      tags:
      - questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionOption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionOption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionOption'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionOption'
          description: ''
    patch:
      operationId: questions_options_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question option.
        required: true
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      tags:
      - questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuestionOption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuestionOption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuestionOption'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionOption'
          description: ''
    delete:
      operationId: questions_options_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question option.
        required: true
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      tags:
      - questions
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/survey/email:
    post:
      operationId: survey_email_create
      description: This returns a 6-digit callback token we can trade for a user's
        Auth Token.
      tags:
      - survey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantEmailAuth'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TenantEmailAuth'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TenantEmailAuth'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantEmailAuth'
          description: ''
  /api/v1/surveys/:
    get:
      operationId: surveys_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - surveys
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSurveyList'
          description: ''
    post:
      operationId: surveys_create
      tags:
      - surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Survey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
  /api/v1/surveys/{id}/:
    get:
      operationId: surveys_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey.
        required: true
      tags:
      - surveys
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
    put:
      operationId: surveys_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey.
        required: true
      tags:
      - surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Survey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
    patch:
      operationId: surveys_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey.
        required: true
      tags:
      - surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSurvey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSurvey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSurvey'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
    delete:
      operationId: surveys_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey.
        required: true
      tags:
      - surveys
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/surveys/{id}/submit/:
    post:
      operationId: surveys_submit_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey.
        required: true
      tags:
      - surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Survey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
  /api/v1/surveys/{id}/duplicate/:
    post:
      operationId: surveys_duplicate_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Survey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Survey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Survey'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
  /api/v1/surveys/{id}/notify/:
    post:
      operationId: surveys_notify_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/surveys/{id}/statistics/:
    get:
      operationId: surveys_statistics_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: query
        name: page
        schema:
          type: integer
          default: 1
      - in: query
        name: page_size
        schema:
          type: integer
          default: 1
      tags:
      - surveys
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Survey'
          description: ''
  /api/v1/surveys/{survey_id}/participants/:
    get:
      operationId: surveys_participants_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - surveys
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPartitionSurveyList'
          description: ''
    post:
      operationId: surveys_participants_create
      parameters:
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartitionSurvey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartitionSurvey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartitionSurvey'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionSurvey'
          description: ''
  /api/v1/surveys/{survey_id}/participants/{id}/:
    get:
      operationId: surveys_participants_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this participant survey.
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - surveys
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionSurvey'
          description: ''
    put:
      operationId: surveys_participants_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this participant survey.
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartitionSurvey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartitionSurvey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartitionSurvey'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionSurvey'
          description: ''
    patch:
      operationId: surveys_participants_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this participant survey.
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPartitionSurvey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPartitionSurvey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPartitionSurvey'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionSurvey'
          description: ''
    delete:
      operationId: surveys_participants_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this participant survey.
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - surveys
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/surveys/{survey_id}/questions/:
    get:
      operationId: surveys_questions_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - surveys
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSurveyQuestionList'
          description: ''
    post:
      operationId: surveys_questions_create
      parameters:
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurveyQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SurveyQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SurveyQuestion'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyQuestion'
          description: ''
  /api/v1/surveys/{survey_id}/questions/{id}/:
    get:
      operationId: surveys_questions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey question.
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - surveys
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyQuestion'
          description: ''
    put:
      operationId: surveys_questions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey question.
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurveyQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SurveyQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SurveyQuestion'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyQuestion'
          description: ''
    patch:
      operationId: surveys_questions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey question.
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSurveyQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSurveyQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSurveyQuestion'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyQuestion'
          description: ''
    delete:
      operationId: surveys_questions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this survey question.
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - surveys
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/surveys/{survey_id}/questions/{question_id}/answers/:
    get:
      operationId: surveys_questions_answers_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - surveys
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnswerList'
          description: ''
    post:
      operationId: surveys_questions_answers_create
      parameters:
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Answer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Answer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Answer'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
  /api/v1/surveys/{survey_id}/questions/{question_id}/answers/{id}/:
    get:
      operationId: surveys_questions_answers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - surveys
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    put:
      operationId: surveys_questions_answers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Answer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Answer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Answer'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    patch:
      operationId: surveys_questions_answers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAnswer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAnswer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAnswer'
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    delete:
      operationId: surveys_questions_answers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      - in: path
        name: question_id
        schema:
          type: integer
        required: true
      - in: path
        name: survey_id
        schema:
          type: integer
        required: true
      tags:
      - surveys
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/surveys/{survey_id}/questions/{question_id}/logics/:
    get:
      operationId: surveys_questions_logics_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: question_id
        schema:
          type: string
        required: true
      - in: path
        name: survey_id
        schema:
          type: string
        required: true
      tags:
      - surveys
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLogicList'
          description: ''
    post:
      operationId: surveys_questions_logics_create
      parameters:
      - in: path
        name: question_id
        schema:
          type: string
        required: true
      - in: path
        name: survey_id
        schema:
          type: string
        required: true
      tags:
      - surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Logic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Logic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Logic'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logic'
          description: ''
  /api/v1/surveys/{survey_id}/questions/{question_id}/logics/{id}/:
    get:
      operationId: surveys_questions_logics_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this logic.
        required: true
      - in: path
        name: question_id
        schema:
          type: string
        required: true
      - in: path
        name: survey_id
        schema:
          type: string
        required: true
      tags:
      - surveys
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logic'
          description: ''
    put:
      operationId: surveys_questions_logics_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this logic.
        required: true
      - in: path
        name: question_id
        schema:
          type: string
        required: true
      - in: path
        name: survey_id
        schema:
          type: string
        required: true
      tags:
      - surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Logic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Logic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Logic'
        required: true
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logic'
          description: ''
    patch:
      operationId: surveys_questions_logics_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this logic.
        required: true
      - in: path
        name: question_id
        schema:
          type: string
        required: true
      - in: path
        name: survey_id
        schema:
          type: string
        required: true
      tags:
      - surveys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLogic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLogic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLogic'
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logic'
          description: ''
    delete:
      operationId: surveys_questions_logics_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this logic.
        required: true
      - in: path
        name: question_id
        schema:
          type: string
        required: true
      - in: path
        name: survey_id
        schema:
          type: string
        required: true
      tags:
      - surveys
      security:
      - jwtAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/token:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoreTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CoreTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CoreTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoreTokenObtainPair'
          description: ''
  /api/v1/token/redirect:
    post:
      operationId: token_redirect_create
      description: |-
        This is a duplicate of rest_framework's own ObtainAuthToken method.
        Instead, this returns an Auth Token based on our callback token and source.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallbackTokenAuth'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallbackTokenAuth'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CallbackTokenAuth'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallbackTokenAuth'
          description: ''
  /api/v1/token/refresh:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/token/verify:
    post:
      operationId: token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
components:
  schemas:
    Answer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
          nullable: true
        answered_at:
          type: string
          format: date-time
          readOnly: true
        answer_updated_at:
          type: string
          format: date-time
          readOnly: true
        question:
          type: integer
        survey:
          type: integer
        option:
          type: integer
          nullable: true
        answered_by:
          type: integer
      required:
      - answer_updated_at
      - answered_at
      - answered_by
      - id
      - option
      - question
      - survey
    CallbackTokenAuth:
      type: object
      description: |-
        Abstract class inspired by DRF's own token serializer.
        Returns a user if valid, None or a message if not.
      properties:
        email:
          type: string
          format: email
        mobile:
          type: string
          pattern: ^\+[1-9]\d{1,14}$
          maxLength: 17
        token:
          type: string
          maxLength: 6
          minLength: 6
      required:
      - token
    CallbackTokenVerification:
      type: object
      description: |-
        Takes a user and a token, verifies the token belongs to the user and
        validates the alias that the token was sent from.
      properties:
        email:
          type: string
          format: email
        mobile:
          type: string
          pattern: ^\+[1-9]\d{1,14}$
          maxLength: 17
        token:
          type: string
          maxLength: 6
          minLength: 6
      required:
      - token
    CoreTokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    CustomSurveyQuestion:
      type: object
      properties:
        question:
          type: integer
        is_active:
          type: boolean
      required:
      - question
    EmailAuth:
      type: object
      description: |-
        Abstract class that returns a callback token based on the field given
        Returns a token if valid, None or a message if not.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    Logic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        logic_type:
          allOf:
          - $ref: '#/components/schemas/LogicTypeEnum'
          minimum: -2147483648
          maximum: 2147483647
        is_active:
          type: boolean
        logic_created_at:
          type: string
          format: date-time
          readOnly: true
        logic_updated_at:
          type: string
          format: date-time
          readOnly: true
        belong_to:
          type: integer
        question_option:
          type: integer
        logic_branch:
          type: integer
          nullable: true
        logic_created_by:
          type: integer
      required:
      - belong_to
      - id
      - logic_created_at
      - logic_created_by
      - logic_updated_at
      - question_option
    LogicTypeEnum:
      enum:
      - 0
      - 1
      - 2
      type: integer
      description: |-
        * `0` - no branch
        * `1` - branch
        * `2` - terminate
    MobileAuth:
      type: object
      description: |-
        Abstract class that returns a callback token based on the field given
        Returns a token if valid, None or a message if not.
      properties:
        mobile:
          type: string
          pattern: ^\+[1-9]\d{1,14}$
          maxLength: 17
      required:
      - mobile
    NestedParticipant:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        is_active:
          type: boolean
      required:
      - email
      - id
      - username
    NestedQuestion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
        question_type:
          allOf:
          - $ref: '#/components/schemas/QuestionType'
          readOnly: true
        options:
          type: array
          items:
            $ref: '#/components/schemas/NestedQuestionOption'
        is_editable:
          type: boolean
        is_deletable:
          type: boolean
        is_active:
          type: boolean
      required:
      - content
      - id
      - options
      - question_type
    NestedQuestionOption:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
        is_active:
          type: boolean
      required:
      - content
      - id
    PaginatedAnswerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
    PaginatedLogicList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Logic'
    PaginatedPartitionSurveyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PartitionSurvey'
    PaginatedQuestionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Question'
    PaginatedQuestionOptionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/QuestionOption'
    PaginatedQuestionTypeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/QuestionType'
    PaginatedSurveyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Survey'
    PaginatedSurveyQuestionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SurveyQuestion'
    PartitionSurvey:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          type: string
          maxLength: 55
        is_active:
          type: boolean
        invited_participant_at:
          type: string
          format: date-time
          readOnly: true
        participant_joined_at:
          type: string
          format: date-time
          readOnly: true
        participant:
          type: integer
        survey:
          type: integer
      required:
      - id
      - invited_participant_at
      - participant
      - participant_joined_at
      - status
      - survey
    PatchedAnswer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
          nullable: true
        answered_at:
          type: string
          format: date-time
          readOnly: true
        answer_updated_at:
          type: string
          format: date-time
          readOnly: true
        question:
          type: integer
        survey:
          type: integer
        option:
          type: integer
          nullable: true
        answered_by:
          type: integer
    PatchedLogic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        logic_type:
          allOf:
          - $ref: '#/components/schemas/LogicTypeEnum'
          minimum: -2147483648
          maximum: 2147483647
        is_active:
          type: boolean
        logic_created_at:
          type: string
          format: date-time
          readOnly: true
        logic_updated_at:
          type: string
          format: date-time
          readOnly: true
        belong_to:
          type: integer
        question_option:
          type: integer
        logic_branch:
          type: integer
          nullable: true
        logic_created_by:
          type: integer
    PatchedPartitionSurvey:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          type: string
          maxLength: 55
        is_active:
          type: boolean
        invited_participant_at:
          type: string
          format: date-time
          readOnly: true
        participant_joined_at:
          type: string
          format: date-time
          readOnly: true
        participant:
          type: integer
        survey:
          type: integer
    PatchedQuestion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        options:
          type: array
          items:
            $ref: '#/components/schemas/NestedQuestionOption'
        content:
          type: string
        is_active:
          type: boolean
        is_editable:
          type: boolean
        is_deletable:
          type: boolean
        question_created_at:
          type: string
          format: date-time
          readOnly: true
        question_updated_at:
          type: string
          format: date-time
          readOnly: true
        question_type:
          type: integer
        question_created_by:
          type: integer
    PatchedQuestionOption:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
        is_active:
          type: boolean
        option_created_at:
          type: string
          format: date-time
          readOnly: true
        option_updated_at:
          type: string
          format: date-time
          readOnly: true
        question:
          type: integer
    PatchedQuestionType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        is_active:
          type: boolean
    PatchedSurvey:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        questions:
          type: array
          items:
            $ref: '#/components/schemas/NestedQuestion'
          readOnly: true
        participant:
          type: array
          items:
            $ref: '#/components/schemas/NestedParticipant'
          readOnly: true
        survey_questions:
          type: array
          items:
            $ref: '#/components/schemas/CustomSurveyQuestion'
        title:
          type: string
          maxLength: 255
        description:
          type: string
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        is_active:
          type: boolean
        survey_created_at:
          type: string
          format: date-time
          readOnly: true
        survey_updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedSurveyQuestion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_active:
          type: boolean
        question_order:
          type: integer
          maximum: 2147483647
          minimum: 0
        asked_at:
          type: string
          format: date-time
          readOnly: true
        adjusted_at:
          type: string
          format: date-time
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        survey:
          type: integer
        question:
          type: integer
        asked_by:
          type: integer
    Question:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        options:
          type: array
          items:
            $ref: '#/components/schemas/NestedQuestionOption'
        content:
          type: string
        is_active:
          type: boolean
        is_editable:
          type: boolean
        is_deletable:
          type: boolean
        question_created_at:
          type: string
          format: date-time
          readOnly: true
        question_updated_at:
          type: string
          format: date-time
          readOnly: true
        question_type:
          type: integer
        question_created_by:
          type: integer
      required:
      - content
      - id
      - options
      - question_created_at
      - question_created_by
      - question_type
      - question_updated_at
    QuestionOption:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
        is_active:
          type: boolean
        option_created_at:
          type: string
          format: date-time
          readOnly: true
        option_updated_at:
          type: string
          format: date-time
          readOnly: true
        question:
          type: integer
      required:
      - content
      - id
      - option_created_at
      - option_updated_at
      - question
    QuestionType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        is_active:
          type: boolean
      required:
      - id
      - name
    Survey:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        questions:
          type: array
          items:
            $ref: '#/components/schemas/NestedQuestion'
          readOnly: true
        participant:
          type: array
          items:
            $ref: '#/components/schemas/NestedParticipant'
          readOnly: true
        survey_questions:
          type: array
          items:
            $ref: '#/components/schemas/CustomSurveyQuestion'
        title:
          type: string
          maxLength: 255
        description:
          type: string
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        is_active:
          type: boolean
        survey_created_at:
          type: string
          format: date-time
          readOnly: true
        survey_updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - end_date
      - id
      - participant
      - questions
      - start_date
      - survey_created_at
      - survey_updated_at
      - title
    SurveyQuestion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_active:
          type: boolean
        question_order:
          type: integer
          maximum: 2147483647
          minimum: 0
        asked_at:
          type: string
          format: date-time
          readOnly: true
        adjusted_at:
          type: string
          format: date-time
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        survey:
          type: integer
        question:
          type: integer
        asked_by:
          type: integer
      required:
      - adjusted_at
      - asked_at
      - asked_by
      - id
      - question
      - survey
    TenantEmailAuth:
      type: object
      description: |-
        Abstract class that returns a callback token based on the field given
        Returns a token if valid, None or a message if not.
      properties:
        email:
          type: string
          format: email
        tenant:
          type: integer
        unit:
          type: integer
        service:
          type: integer
        survey:
          type: integer
      required:
      - email
      - service
      - survey
      - tenant
      - unit
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        email:
          type: string
          format: email
          maxLength: 254
        username:
          type: string
          maxLength: 150
        phone_number:
          type: string
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        is_staff:
          type: boolean
        is_active:
          type: boolean
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - email
      - id
      - password
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
